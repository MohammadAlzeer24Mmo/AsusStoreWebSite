{"version":3,"file":"static/js/554.679d63b4.chunk.js","mappings":"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","sources":["pages/SignUp.js"],"sourcesContent":["import React from 'react';\r\nimport { Fragment, useEffect, useState } from \"react\"\r\nimport \"./SignStyling/Sign-up.css\"\r\n\r\nconst SignUp = () => {\r\n    const [enteredName,setEnteredName] = useState('')\r\n    const [enteredNameTouched, setEnteredNameTouched] = useState(false)\r\n    const enteredNameIsValid =  enteredName.trim() !== '';\r\n    const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\r\n    const [signUpState,setSignUpState] = useState(false);\r\n\r\n    const userNameChangeHandler = (event) =>{\r\n        setEnteredName(event.target.value)\r\n        }\r\n        const userNameBlureHandler = () => {\r\n            setEnteredNameTouched(true)\r\n        }\r\n\r\n    const [enteredFullName,setEnteredFullName] = useState('')\r\n    const [enteredFullNameTouched, setEnteredFullNameTouched] = useState(false)\r\n    const enteredFullNameIsValid =  enteredFullName.trim() !== '';\r\n    const fullNameInputIsInvalid = !enteredFullNameIsValid && enteredFullNameTouched;\r\n\r\n    const fullNameChangeHandler = (event) =>{\r\n        setEnteredFullName(event.target.value)\r\n        }\r\n        const fullNameBlureHandler = () => {\r\n            setEnteredFullNameTouched(true)\r\n        }\r\n\r\n    //Email\r\n    const [enteredEmail,setEnteredEmail] = useState('')\r\n    const [enteredEmailTouched, setEnteredEmailTouched] = useState(false)\r\n    \r\n    const enteredEmailIsNotEmpty=  enteredEmail.trim() !== '';\r\n    const enteredEmailFormIsValid =   enteredEmail.includes(\"@\");\r\n\r\n    const enteredEmailIsValid = enteredEmailIsNotEmpty && enteredEmailFormIsValid\r\n\r\n    const EmailInputIsInvalid = ( !enteredEmailIsNotEmpty || !enteredEmailFormIsValid ) && enteredEmailTouched;\r\n    //End Email\r\n\r\n    //password\r\n    const [enteredPassword,setEnteredPassword] = useState('')\r\n    const [enteredPasswordTouched, setEnteredPasswordTouched] = useState(false)\r\n    \r\n    // const enteredPasswordIsNotEmpty=  enteredPassword.length >= 4;\r\n    // const enteredPasswordFormIsValid =   enteredPassword.includes(\"@\");\r\n    const enteredPasswordIsValid = enteredPassword.length >= 4;\r\n\r\n    const passwordInputIsInvalid = !enteredPasswordIsValid && enteredPasswordTouched;\r\n    const passwordChangeHandler = (event) =>{\r\n        setEnteredPassword(event.target.value)\r\n        }\r\n        const passwordBlureHandler = () => {\r\n            setEnteredPasswordTouched(true)\r\n            setEnteredPasswordConfirmTouched(true)\r\n        }\r\n\r\n        \r\n    \r\n    //End password\r\n\r\n     // password Confirm\r\n     const [enteredPasswordConfirm,setEnteredPasswordConfirm] = useState('')\r\n     const [enteredPasswordConfirmTouched, setEnteredPasswordConfirmTouched] = useState(false)\r\n     \r\n\r\n     let enteredPasswordConfirmIsValid = true ;\r\n\r\n     if(enteredPasswordIsValid){\r\n        enteredPasswordConfirmIsValid = enteredPasswordConfirm === enteredPassword;\r\n     }else{\r\n        enteredPasswordConfirmIsValid = true;\r\n     }\r\n \r\n     const passwordConfirmInputIsInvalid = !enteredPasswordConfirmIsValid  && enteredPasswordConfirmTouched;\r\n \r\n     const passwordConfirmChangeHandler = (event) =>{\r\n        setEnteredPasswordConfirm(event.target.value)\r\n         }\r\n         const passwordConfirmBlureHandler = () => {\r\n             setEnteredPasswordConfirmTouched(true)\r\n         }\r\n \r\n         \r\n     \r\n     //End Confirm password\r\n    let formIsValid = false;\r\n\r\n    if(enteredNameIsValid && enteredEmailIsValid && enteredPasswordIsValid && enteredPasswordConfirmIsValid && enteredFullNameIsValid){\r\n        formIsValid = true;\r\n    }\r\n\r\n     \r\n\r\n        \r\n        const EmailChangeHandler = (event) =>{\r\n            setEnteredEmail(event.target.value)\r\n            }\r\n            const EmailBlureHandler = () => {\r\n                setEnteredEmailTouched(true)\r\n            }\r\n            \r\n        const formSubmissionHandler = (event) => {\r\n            event.preventDefault();\r\n\r\n            setEnteredNameTouched(true);\r\n            setEnteredEmailTouched(true);\r\n            setEnteredPasswordTouched(true);\r\n            setEnteredPasswordConfirmTouched(true);\r\n            setEnteredFullNameTouched(true);\r\n\r\n            if(!enteredNameIsValid || !enteredEmailFormIsValid || !enteredPasswordIsValid || !enteredPasswordConfirmIsValid || !enteredFullNameIsValid){\r\n                return\r\n            }\r\n            setEnteredName('');\r\n            setEnteredNameTouched(false)\r\n\r\n            setEnteredFullName('');\r\n            setEnteredFullNameTouched(false)\r\n\r\n            setEnteredEmail('');\r\n            setEnteredEmailTouched(false)\r\n\r\n            setEnteredPassword('')\r\n            setEnteredPasswordTouched(false)\r\n\r\n            setEnteredPasswordConfirm('')\r\n            setEnteredPasswordConfirmTouched(false);\r\n\r\n            setSignUpState(true);\r\n        }\r\n    // const [signingToggle,setSigningToggle]=useState('SignUp');\r\n    // const [background,setBackground]=useState('somecontent');\r\n    // const signUpHandler= () => {\r\n    //     setSigningToggle(\"Account\")\r\n    // }\r\n\r\n    const fullNameClasses = fullNameInputIsInvalid ? 'invalid' : '';\r\n    const emailClasses = EmailInputIsInvalid ? 'invalid' : '';\r\n    const userNameClasses = nameInputIsInvalid ? 'invalid' : '';\r\n    const paswwordClasses = passwordInputIsInvalid ? 'invalid' : '';\r\n    const paswwordConfirmClasses = passwordConfirmInputIsInvalid ? 'invalid' : '';\r\n\r\n    return(\r\n        <Fragment>\r\n            {/* <NavBar account={signingToggle} background={background}/> */}\r\n            <div className=\"sign-up-container\">\r\n            <form className=\"sign-up\" onSubmit={formSubmissionHandler} >\r\n                <div className=\"signUp-register\">Register</div>\r\n                <input className={fullNameClasses} onChange={fullNameChangeHandler} onBlur={fullNameBlureHandler}  type=\"text\" placeholder=\"Full name\"/>\r\n                { fullNameInputIsInvalid  && <p> Your name must not be empty</p>}\r\n                {/* <label>hi</label> */}\r\n                <input className={emailClasses} onChange={EmailChangeHandler} onBlur={EmailBlureHandler} defaultValue={enteredEmail} value={enteredEmail} type=\"email\" placeholder=\"E-mail\"/>\r\n                { EmailInputIsInvalid && !enteredEmailIsNotEmpty  && <p> Email must not be empty </p>}\r\n                { EmailInputIsInvalid && enteredEmailIsNotEmpty && !enteredEmailFormIsValid && <p> Email must contain @ </p>}\r\n                {/* <label>hi</label> */}\r\n                <input className={userNameClasses} onChange={userNameChangeHandler} onBlur={userNameBlureHandler}  type=\"text\" placeholder=\"Username\"/>\r\n                { nameInputIsInvalid  && <p> User name must not be empty</p>}\r\n                {/* <label>hi</label> */}\r\n                <input className={paswwordClasses} onChange={passwordChangeHandler} onBlur={passwordBlureHandler} type=\"password\" placeholder=\"Password\" />\r\n                {passwordInputIsInvalid && <p>Password Must be between 4 and 8</p>}\r\n                {/* <label>hi</label> */}\r\n                <input disabled={!enteredPasswordIsValid} className={paswwordConfirmClasses} onChange={passwordConfirmChangeHandler} onBlur={passwordConfirmBlureHandler}  type=\"password\" placeholder=\"Confirm Password\"/>\r\n                {passwordConfirmInputIsInvalid && <p>didn't match your password yet</p>}\r\n                {formIsValid && <p className=\"ready\">You Are Ready To Sign UP</p>}\r\n                <button disabled = {!formIsValid}  >Sign Up</button>\r\n                <div className=\"sign-up_agree\">By clicking Sign Up you agree to our terms</div>\r\n            </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SignUp;"],"names":["_useState","useState","_useState2","_slicedToArray","enteredName","setEnteredName","_useState3","_useState4","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","nameInputIsInvalid","_useState5","_useState6","setSignUpState","_useState7","_useState8","enteredFullName","setEnteredFullName","_useState9","_useState10","enteredFullNameTouched","setEnteredFullNameTouched","enteredFullNameIsValid","fullNameInputIsInvalid","_useState11","_useState12","enteredEmail","setEnteredEmail","_useState13","_useState14","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsNotEmpty","enteredEmailFormIsValid","includes","enteredEmailIsValid","EmailInputIsInvalid","_useState15","_useState16","enteredPassword","setEnteredPassword","_useState17","_useState18","enteredPasswordTouched","setEnteredPasswordTouched","enteredPasswordIsValid","length","passwordInputIsInvalid","_useState19","_useState20","enteredPasswordConfirm","setEnteredPasswordConfirm","_useState21","_useState22","enteredPasswordConfirmTouched","setEnteredPasswordConfirmTouched","enteredPasswordConfirmIsValid","passwordConfirmInputIsInvalid","formIsValid","fullNameClasses","emailClasses","userNameClasses","paswwordClasses","paswwordConfirmClasses","_jsx","Fragment","children","className","_jsxs","onSubmit","event","preventDefault","onChange","target","value","onBlur","type","placeholder","defaultValue","disabled"],"sourceRoot":""}